{"ast":null,"code":"var _jsxFileName = \"/Users/yu/Downloads/payment-plans/client/src/App.js\";\nimport React from 'react';\nimport './Main.scss';\nimport Header from './Components/Header';\nimport PlanCard from './Components/PlanCard';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.handleJsonExport = () => {\n      const res = fetch('/api/exportshapes', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.state.shapes)\n      });\n      console.log(res);\n    };\n\n    this.state = {\n      plans: []\n    };\n  } //load all plans\n\n\n  componentDidMount() {\n    fetch('/api/avaiable-plans').then(res => res.json()).then(plans => this.setState({\n      plans\n    }, () => console.log(plans)));\n  } //export to json file\n\n\n  render() {\n    let InValidPath = \"#\";\n    /* sort out plans and pass in as props */\n\n    const weeklyPlans = [];\n    const fornightlyPlans = [];\n    const monthlyPlans = [];\n\n    const uuidv4 = require('uuid/v4');\n\n    this.state.plans.forEach(function (plan) {\n      // console.log(plan.interval)\n      plan.id = uuidv4();\n      plan.selectStateClass = \"plan-card__plan-wrapper--plan\";\n\n      switch (plan.interval) {\n        case 'weekly':\n          weeklyPlans.push(plan);\n          break;\n\n        case 'fornightly':\n          fornightlyPlans.push(plan);\n          break;\n\n        case 'monthly':\n          monthlyPlans.push(plan);\n          break;\n\n        default:\n          console.log('Sorry, cannot find' + plan.interval + '.');\n      }\n    });\n    return React.createElement(\"div\", {\n      className: \"app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"app__header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: InValidPath,\n      className: \"button button--back\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Back\"), React.createElement(PlanCard, {\n      weeklyPlans: weeklyPlans,\n      fornightlyPlans: fornightlyPlans,\n      monthlyPlans: monthlyPlans,\n      handleSelectedPlan: this.handleSelectedPlan,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/yu/Downloads/payment-plans/client/src/App.js"],"names":["React","Header","PlanCard","App","Component","constructor","handleJsonExport","res","fetch","method","headers","body","JSON","stringify","state","shapes","console","log","plans","componentDidMount","then","json","setState","render","InValidPath","weeklyPlans","fornightlyPlans","monthlyPlans","uuidv4","require","forEach","plan","id","selectStateClass","interval","push","handleSelectedPlan"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;AAIA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAE;AACX;;AADW,SAebC,gBAfa,GAeM,MAAM;AAEzB,YAAMC,GAAG,GAAIC,KAAK,CAAC,mBAAD,EAAsB;AACtCC,QAAAA,MAAM,EAAE,MAD8B;AAEtCC,QAAAA,OAAO,EAAE;AACP,oBAAU,kBADH;AAEP,0BAAgB;AAFT,SAF6B;AAMtCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,KAAKC,KAAL,CAAWC,MAA1B;AANgC,OAAtB,CAAlB;AASAC,MAAAA,OAAO,CAACC,GAAR,CAAYV,GAAZ;AACC,KA3BY;;AAEX,SAAKO,KAAL,GAAW;AACTI,MAAAA,KAAK,EAAC;AADG,KAAX;AAGD,GAN+B,CAQhC;;;AACAC,EAAAA,iBAAiB,GAAE;AACjBX,IAAAA,KAAK,CAAC,qBAAD,CAAL,CACKY,IADL,CACUb,GAAG,IAAIA,GAAG,CAACc,IAAJ,EADjB,EAEKD,IAFL,CAEUF,KAAK,IAAI,KAAKI,QAAL,CAAc;AAACJ,MAAAA;AAAD,KAAd,EAAsB,MAAIF,OAAO,CAACC,GAAR,CAAYC,KAAZ,CAA1B,CAFnB;AAGD,GAb+B,CAehC;;;AAiBAK,EAAAA,MAAM,GAAE;AACN,QAAIC,WAAW,GAAG,GAAlB;AACA;;AACA,UAAMC,WAAW,GAAE,EAAnB;AACA,UAAMC,eAAe,GAAG,EAAxB;AACA,UAAMC,YAAY,GAAG,EAArB;;AACA,UAAMC,MAAM,GAAGC,OAAO,CAAC,SAAD,CAAtB;;AACA,SAAKf,KAAL,CAAWI,KAAX,CAAiBY,OAAjB,CAAyB,UAASC,IAAT,EAAe;AACtC;AACAA,MAAAA,IAAI,CAACC,EAAL,GAAUJ,MAAM,EAAhB;AACAG,MAAAA,IAAI,CAACE,gBAAL,GAAwB,+BAAxB;;AACA,cAAQF,IAAI,CAACG,QAAb;AACE,aAAK,QAAL;AACET,UAAAA,WAAW,CAACU,IAAZ,CAAiBJ,IAAjB;AACA;;AACF,aAAK,YAAL;AACEL,UAAAA,eAAe,CAACS,IAAhB,CAAqBJ,IAArB;AACA;;AACF,aAAK,SAAL;AACEJ,UAAAA,YAAY,CAACQ,IAAb,CAAkBJ,IAAlB;AACA;;AACF;AACEf,UAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBc,IAAI,CAACG,QAA5B,GAAuC,GAAnD;AAXJ;AAaD,KAjBD;AAmBA,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACF;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,IAAI,EAAEV,WAAT;AAAsB,MAAA,SAAS,EAAC,qBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,oBAAC,QAAD;AACA,MAAA,WAAW,EAAEC,WADb;AAEA,MAAA,eAAe,EAAEC,eAFjB;AAGA,MAAA,YAAY,EAAEC,YAHd;AAIA,MAAA,kBAAkB,EAAE,KAAKS,kBAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAFF,CADE,CADF;AAgBD;;AA1E+B;;AA6ElC,eAAejC,GAAf","sourcesContent":["import React from 'react';\nimport './Main.scss';\nimport Header from './Components/Header';\nimport PlanCard from './Components/PlanCard';\n\n\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state={\n      plans:[]\n    }\n  }\n\n  //load all plans\n  componentDidMount(){\n    fetch('/api/avaiable-plans')\n        .then(res => res.json())\n        .then(plans => this.setState({plans},()=>console.log(plans)));\n  } \n\n  //export to json file\n  handleJsonExport = () => {\n\n  const res =  fetch('/api/exportshapes', {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(this.state.shapes)\n  });\n\n  console.log(res);\n  }\n\n\n\n  render(){\n    let InValidPath = \"#\"\n    /* sort out plans and pass in as props */\n    const weeklyPlans= [];\n    const fornightlyPlans = [];\n    const monthlyPlans = [];\n    const uuidv4 = require('uuid/v4');\n    this.state.plans.forEach(function(plan) {\n      // console.log(plan.interval)\n      plan.id = uuidv4();\n      plan.selectStateClass = \"plan-card__plan-wrapper--plan\";\n      switch (plan.interval) {\n        case 'weekly':\n          weeklyPlans.push(plan)\n          break;\n        case 'fornightly':\n          fornightlyPlans.push(plan)\n          break;\n        case 'monthly':\n          monthlyPlans.push(plan)\n          break;\n        default:\n          console.log('Sorry, cannot find' + plan.interval + '.');\n      }\n    });\n\n    return(\n      <div className=\"app\">\n    <div className=\"app__header\">\n      <Header />\n      <div className=\"container\">\n        <a href={InValidPath} className=\"button button--back\">Back</a>\n        <PlanCard \n        weeklyPlans={weeklyPlans}\n        fornightlyPlans={fornightlyPlans}\n        monthlyPlans={monthlyPlans}\n        handleSelectedPlan={this.handleSelectedPlan}\n        />\n      </div>\n    </div>\n    </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}