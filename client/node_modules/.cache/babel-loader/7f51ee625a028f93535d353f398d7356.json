{"ast":null,"code":"var _jsxFileName = \"/Users/yu/Downloads/payment-plans/client/src/App.js\";\nimport React from 'react';\nimport './Main.scss';\nimport Header from './Components/Header';\nimport PlanCard from './Components/PlanCard';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      plans: [],\n      submittedPlans: []\n    };\n\n    this.handleSubmitPlan = () => {\n      // const res =  fetch('/api/exportshapes', {\n      //   method: 'POST',\n      //   headers: {\n      //     'Accept': 'application/json',\n      //     'Content-Type': 'application/json',\n      //   },\n      //   body: JSON.stringify(this.state.shapes)\n      // });\n      console.log('submited');\n    };\n\n    this.handleSelectedPlan = (paymentCount, interval) => {\n      console.log(paymentCount, interval);\n      let plans = this.state.submittedPlans;\n    };\n  }\n\n  //load all plans\n  componentDidMount() {\n    fetch('/api/avaiable-plans').then(res => res.json()).then(plans => this.setState({\n      plans\n    }, () => console.log(plans)));\n    fetch('/api/submitted-plans').then(res => res.json()).then(submittedPlans => this.setState({\n      submittedPlans\n    }, () => console.log(submittedPlans)));\n  } //export to json file\n\n\n  render() {\n    let InValidPath = \"#\";\n    /* sort out plans and pass in as props */\n\n    const weeklyPlans = [];\n    const fornightlyPlans = [];\n    const monthlyPlans = [];\n\n    const uuidv4 = require('uuid/v4');\n\n    this.state.plans.forEach(function (plan) {\n      // console.log(plan.interval)\n      plan.id = uuidv4();\n      plan.selectStateClass = \"plan-card__plan-wrapper--plan\";\n\n      switch (plan.interval) {\n        case 'weekly':\n          weeklyPlans.push(plan);\n          break;\n\n        case 'fornightly':\n          fornightlyPlans.push(plan);\n          break;\n\n        case 'monthly':\n          monthlyPlans.push(plan);\n          break;\n\n        default:\n          console.log('Sorry, cannot find' + plan.interval + '.');\n      }\n    });\n    return React.createElement(\"div\", {\n      className: \"app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"app__header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: InValidPath,\n      className: \"button button--back\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Back\"), React.createElement(PlanCard, {\n      weeklyPlans: weeklyPlans,\n      fornightlyPlans: fornightlyPlans,\n      monthlyPlans: monthlyPlans,\n      handleSelectedPlan: this.handleSelectedPlan,\n      submitPlan: this.handleSubmitPlan,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/yu/Downloads/payment-plans/client/src/App.js"],"names":["React","Header","PlanCard","App","Component","state","plans","submittedPlans","handleSubmitPlan","console","log","handleSelectedPlan","paymentCount","interval","componentDidMount","fetch","then","res","json","setState","render","InValidPath","weeklyPlans","fornightlyPlans","monthlyPlans","uuidv4","require","forEach","plan","id","selectStateClass","push"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Main.scss';\nimport Header from './Components/Header';\nimport PlanCard from './Components/PlanCard';\n\n\n\nclass App extends React.Component {\n\n    state={\n      plans:[],\n      submittedPlans:[]\n    }\n  \n  //load all plans\n  componentDidMount(){\n    fetch('/api/avaiable-plans')\n        .then(res => res.json())\n        .then(plans => this.setState({plans},()=>console.log(plans)));\n\n    fetch('/api/submitted-plans')\n        .then(res => res.json())\n        .then(submittedPlans => this.setState({submittedPlans},()=>console.log(submittedPlans)));\n  } \n\n  //export to json file\n  handleSubmitPlan = () => {\n\n  // const res =  fetch('/api/exportshapes', {\n  //   method: 'POST',\n  //   headers: {\n  //     'Accept': 'application/json',\n  //     'Content-Type': 'application/json',\n  //   },\n  //   body: JSON.stringify(this.state.shapes)\n  // });\n\n  console.log('submited');\n  }\n\n  //prepare\n  handleSelectedPlan = (paymentCount, interval) => {\n    console.log(paymentCount,interval);\n\n    let plans = this.state.submittedPlans;\n\n  }\n\n  render(){\n    let InValidPath = \"#\"\n    /* sort out plans and pass in as props */\n    const weeklyPlans= [];\n    const fornightlyPlans = [];\n    const monthlyPlans = [];\n    const uuidv4 = require('uuid/v4');\n    this.state.plans.forEach(function(plan) {\n      // console.log(plan.interval)\n      plan.id = uuidv4();\n      plan.selectStateClass = \"plan-card__plan-wrapper--plan\";\n      switch (plan.interval) {\n        case 'weekly':\n          weeklyPlans.push(plan)\n          break;\n        case 'fornightly':\n          fornightlyPlans.push(plan)\n          break;\n        case 'monthly':\n          monthlyPlans.push(plan)\n          break;\n        default:\n          console.log('Sorry, cannot find' + plan.interval + '.');\n      }\n    });\n\n    return(\n      <div className=\"app\">\n    <div className=\"app__header\">\n      <Header />\n      <div className=\"container\">\n        <a href={InValidPath} className=\"button button--back\">Back</a>\n        <PlanCard \n        weeklyPlans={weeklyPlans}\n        fornightlyPlans={fornightlyPlans}\n        monthlyPlans={monthlyPlans}\n        handleSelectedPlan={this.handleSelectedPlan}\n        submitPlan = {this.handleSubmitPlan}\n        />\n      </div>\n    </div>\n    </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}