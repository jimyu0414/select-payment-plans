{"ast":null,"code":"var _jsxFileName = \"/Users/yu/Downloads/payment-plans/client/src/App.js\";\nimport React from 'react';\nimport './Main.scss';\nimport Header from './Components/Header';\nimport PlanCard from './Components/PlanCard';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.handleSubmitPlan = () => {\n      //get the submitted\n      console.log(this.submittedPlan.paymentCount, this.submittedPlan.interval);\n      const plan = {\n        \"interval\": this.submittedPlan.interval,\n        \"paymentCount\": this.submittedPlan.paymentCount\n      };\n      const res = fetch('/api/submit-to-plan', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.state.submittedPlans)\n      });\n      console.log(res);\n    };\n\n    this.handleSelectedPlan = (paymentCount, interval) => {\n      //console.log(paymentCount,interval);\n      //store the submitted plan while plan on click\n      this.submittedPlan.paymentCount = paymentCount;\n      this.submittedPlan.interval = interval;\n    };\n\n    this.submittedPlan = {};\n    this.state = {\n      plans: [],\n      submittedPlans: []\n    };\n  } //load all plans\n\n\n  componentDidMount() {\n    fetch('/api/avaiable-plans').then(res => res.json()).then(plans => this.setState({\n      plans\n    }, () => console.log(plans)));\n    fetch('/api/submitted-plans').then(res => res.json()).then(submittedPlans => this.setState({\n      submittedPlans\n    }, () => console.log(submittedPlans)));\n  } //export to json file\n\n\n  render() {\n    let InValidPath = \"#\";\n    /* sort out plans and pass in as props */\n\n    const weeklyPlans = [];\n    const fornightlyPlans = [];\n    const monthlyPlans = [];\n\n    const uuidv4 = require('uuid/v4');\n\n    this.state.plans.forEach(function (plan) {\n      // console.log(plan.interval)\n      plan.id = uuidv4();\n      plan.selectStateClass = \"plan-card__plan-wrapper--plan\";\n\n      switch (plan.interval) {\n        case 'weekly':\n          weeklyPlans.push(plan);\n          break;\n\n        case 'fornightly':\n          fornightlyPlans.push(plan);\n          break;\n\n        case 'monthly':\n          monthlyPlans.push(plan);\n          break;\n\n        default:\n          console.log('Sorry, cannot find' + plan.interval + '.');\n      }\n    });\n    return React.createElement(\"div\", {\n      className: \"app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"app__header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: InValidPath,\n      className: \"button button--back\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Back\"), React.createElement(PlanCard, {\n      weeklyPlans: weeklyPlans,\n      fornightlyPlans: fornightlyPlans,\n      monthlyPlans: monthlyPlans,\n      handleSelectedPlan: this.handleSelectedPlan,\n      submitPlan: this.handleSubmitPlan,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/yu/Downloads/payment-plans/client/src/App.js"],"names":["React","Header","PlanCard","App","Component","constructor","handleSubmitPlan","console","log","submittedPlan","paymentCount","interval","plan","res","fetch","method","headers","body","JSON","stringify","state","submittedPlans","handleSelectedPlan","plans","componentDidMount","then","json","setState","render","InValidPath","weeklyPlans","fornightlyPlans","monthlyPlans","uuidv4","require","forEach","id","selectStateClass","push"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Main.scss';\nimport Header from './Components/Header';\nimport PlanCard from './Components/PlanCard';\n\n\n\nclass App extends React.Component {\n\n    constructor(){\n      super();\n      this.submittedPlan = {};\n      this.state={\n        plans:[],\n        submittedPlans:[]\n      }\n    }\n\n  \n  //load all plans\n  componentDidMount(){\n    fetch('/api/avaiable-plans')\n        .then(res => res.json())\n        .then(plans => this.setState({plans},()=>console.log(plans)));\n\n    fetch('/api/submitted-plans')\n        .then(res => res.json())\n        .then(submittedPlans => this.setState({submittedPlans},()=>console.log(submittedPlans)));\n  } \n\n  //export to json file\n  handleSubmitPlan = () => {\n    //get the submitted\n    console.log(this.submittedPlan.paymentCount,this.submittedPlan.interval);\n    const plan = {\n      \"interval\" : this.submittedPlan.interval,\n      \"paymentCount\" : this.submittedPlan.paymentCount\n    }\n    \n  \n    \n  const res =  fetch('/api/submit-to-plan', {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(this.state.submittedPlans)\n  });\n\n  console.log(res);\n  }\n\n  //prepare\n  handleSelectedPlan = (paymentCount, interval) => {\n    //console.log(paymentCount,interval);\n    //store the submitted plan while plan on click\n    this.submittedPlan.paymentCount = paymentCount;\n    this.submittedPlan.interval = interval;\n  }\n\n  render(){\n    let InValidPath = \"#\"\n    /* sort out plans and pass in as props */\n    const weeklyPlans= [];\n    const fornightlyPlans = [];\n    const monthlyPlans = [];\n    const uuidv4 = require('uuid/v4');\n    this.state.plans.forEach(function(plan) {\n      // console.log(plan.interval)\n      plan.id = uuidv4();\n      plan.selectStateClass = \"plan-card__plan-wrapper--plan\";\n      switch (plan.interval) {\n        case 'weekly':\n          weeklyPlans.push(plan)\n          break;\n        case 'fornightly':\n          fornightlyPlans.push(plan)\n          break;\n        case 'monthly':\n          monthlyPlans.push(plan)\n          break;\n        default:\n          console.log('Sorry, cannot find' + plan.interval + '.');\n      }\n    });\n\n    return(\n      <div className=\"app\">\n    <div className=\"app__header\">\n      <Header />\n      <div className=\"container\">\n        <a href={InValidPath} className=\"button button--back\">Back</a>\n        <PlanCard \n        weeklyPlans={weeklyPlans}\n        fornightlyPlans={fornightlyPlans}\n        monthlyPlans={monthlyPlans}\n        handleSelectedPlan={this.handleSelectedPlan}\n        submitPlan = {this.handleSubmitPlan}\n        />\n      </div>\n    </div>\n    </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}